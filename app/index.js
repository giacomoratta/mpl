const path = require('path')
const ConfigModule = require('./config')
const PathQueryModule = require('./path-query')

const log = require('../core/logger').createLogger('app')

/**
 * Starts the boot procedure for the application
 * @param {string} appRootPath: where the executable is located
 * @returns {Promise<boolean>}: false means 'severe error', so app must be closed
 */
const boot = async ({ appRootPath }) => {
  log.info('Booting the application...')
  if (await ConfigModule.boot(path.join(appRootPath, 'config.json')) !== true) return false

  const config = ConfigModule.API.config
  const AppDataDirectory = config.field('AppDataDirectory').fn.toAbsPath()

  if (await PathQueryModule.boot(path.join(AppDataDirectory, 'path_query.json')) !== true) return false
  // if (await PathQueryModule.boot(AppDataDirectory, 'project_history.json')) !== true) return false
  // if (await PathQueryModule.boot(AppDataDirectory, 'bookmarks.json')) !== true) return false
  // if (await PathQueryModule.boot(AppDataDirectory, 'samples_index.json')) !== true) return false
  // todo: remove json extension
  // todo: put everything in the same directory (also config.json)
  return true
}

/**
 * Cleans many files generated by the application
 * @returns {Promise<boolean>}
 */
const clean = async () => {
  log.info('Cleaning application files...')
  await ConfigModule.clean()
  await PathQueryModule.clean()
  return true
}

module.exports = {
  boot,
  clean,

  API: {
    config: ConfigModule.API.config,
    pathQuery: PathQueryModule.API.pathQuery
  }
}
